FlippyBottle

game entities :-
player(bottle)
platforms(shelves, appliances, furniture, etc.)
floor/ground

game Loop:-

player jumps/flips from platform to platform as long as he can without touching the floor. platforms may react to player landing on them.  

game design:

1 bottle movement:-
					i)jump motion:- projectile motion with a constant velocity/impulse force(along x and y) being applied on tap
									two jumps allowed before making contact with platform surface. On second jump set velocity to 0 before reaplying constant velocity/impulse force;
									
									use velocity/impulse force?
									
					ii)rotation/acrobatics:- a) use animation/ transform.rotate(currently) / angular velocity?- must be compatible with collision physics.
												-animations would be easier to apply different cosmetic effects?
											b)rotation/acrobatics should be faster/ different on second jump.
											
											c) must come back to original orientation before landing on something.
											(currently achieving this by making sure it completes a rotation in 3/4 th of its total flight time(based on initial velocity).
											
											
2. platforms - i) states- a)player not on;
						  b)player lands on(enter) ----> use abstract class platform to inherit these as virtual functions. 
						  c)player leaves
						  d)player in contact
				
				each platform can do something on each state. like (shelves falling over, fans pushing the player, appliances turning on, etc).
				
				
				ii) may need to divide into subclasses based on what the platform does.
				
3. procedural platform generation:- approach A: have a bunch of prefabricated sections which can be randomly placed added to the end as the player advances.
									approach B: generate / spawn platform prefabs at random positions(within bounds) at runtime.
									
						
4. multiplayer: - option A) both players play independantly with 3 lives. whoever gets farther/higher score wins - this is what mgpl uses on all of their games.
				  option B) race style. each player can see a ghost of their oppenent which won't affect their environment. player loses if he hits the floor or
				  lets the other player get too far ahead.